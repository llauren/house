#!/usr/bin/env python

import time

import paho.mqtt.client as mqtt
client = mqtt.Client()

lights = ['Trees', 'Front', 'Stairs']

# The callback for when the client receives a CONNACK response from the server.
def on_connect(client, userdata, flags, rc):
    print("Connected with result code "+str(rc))

    # Subscribing in on_connect() means that if we lose the connection and
    # reconnect then subscriptions will be renewed.
    # client.subscribe("$SYS/#")
    client.subscribe("/events/#")

# The callback for when a PUBLISH message is received from the server.
def on_message(client, userdata, msg):
    print(msg.topic+": "+str(msg.payload))

    doit = False
    if (msg.topic.startswith("/events/sun")):
        if "sunrise" == msg.payload:
            value = 0
            doit = True
        if "sunset" == msg.payload:
            value = 1
            doit = True

        if doit:
            for light in lights:
                topic = "/devices/42-Switch/controls/" + light + "/on"
                print(topic, value)
                client.publish(topic, value)
                time.sleep(0.1)

client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message

client.connect("domo.lan", 1883, 60)

# Blocking call that processes network traffic, dispatches callbacks and
# handles reconnecting.
# Other loop*() functions are available that give a threaded interface and a
# manual interface. 
run = True
while run:
    client.loop()
client.loop_forever()
